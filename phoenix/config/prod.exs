use Mix.Config

# For production, we configure the host to read the PORT
# from the system environment. Therefore, you will need
# to set PORT=80 before running your server.
#
# You should also configure the url host to something
# meaningful, we use this information when generating URLs.
#
# Finally, we also include the path to a manifest
# containing the digested version of static files. This
# manifest is generated by the mix phoenix.digest task
# which you typically run after static files are built.
config :login_proxy, LoginProxy.Endpoint,
  server: true,
  http: [port: {:system, "PORT"}],
  url: [port: 80],
  secure_session: true
  # cache_static_manifest: "priv/static/manifest.json"

Code.append_path("./_build/prod/lib/dynamic_config/ebin")
config :dynamic_config, :boot_modules, DynamicConfig.Service.implicit_modules([:loaded_applications, :project_dependencies, :project_app])

# Do not print debug messages in production
config :logger, level: :debug

# JAMCLM-378  -- @TODO ensure key_file/cert_file are forced to be overridden. Intuitive boot failure if not present
config :login_proxy, :esaml,
  key_file: "JAM_CLM_KEY.pem",
  cert_file: "JAM_CLM.pem",
  allow_stale: false,
  esaml_util: :esaml_util

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :login_proxy, LoginProxy.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [port: 443,
#               keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#               certfile: System.get_env("SOME_APP_SSL_CERT_PATH")]
#
# Where those two env variables return an absolute path to
# the key and cert in disk or a relative path inside priv,
# for example "priv/ssl/server.key".
#
# We also recommend setting `force_ssl`, ensuring no data is
# ever sent via http, always redirecting to https:
#
#     config :login_proxy, LoginProxy.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.

# ## Using releases
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
#     config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :login_proxy, LoginProxy.Endpoint, server: true
#

# Tenant info
# sub_domain is something like ".test2.sapkora.ca"
config :login_proxy, :sub_domain, {DynamicConfig.Env, "SUB_DOMAIN"}
config :login_proxy, tenants: [
  %{
    server: "jam",
    name: "Tenant1",
    uuid: "50c5a290-146d-4d54-944c-1bfad270718d",
    service_provider_issuer: "issuer1"
  },
  %{
    server: "qa",
    name: "QA Tenant",
    uuid: "c75ebed8-b329-4584-afc9-fbc9549e9646",
    service_provider_issuer: "issuer1"
  },
  %{
    server: "localhost",
    name: "Tenant1",
    uuid: "dddddddd-1ab1-1bc1-1de1-ffffffffffff",
    service_provider_issuer: "issuer1"
  }
]

# Finally import the config/prod.secret.exs
# which should be versioned separately.
#import_config "prod.secret.exs"
